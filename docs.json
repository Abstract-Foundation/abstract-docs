{
  "$schema": "https://mintlify.com/docs.json",
  "theme": "mint",
  "name": "Abstract",
  "colors": {
    "primary": "#0D9373",
    "light": "#07C983",
    "dark": "#0D9373"
  },
  "favicon": "/favicon.svg",
  "banner": {
    "content": "Check out our new component library - [build.abs.xyz](https://build.abs.xyz)!",
    "dismissible": true
  },
  "navigation": {
    "tabs": [
      {
        "tab": "Documentation",
        "groups": [
          {
            "group": "Overview",
            "pages": [
              "overview",
              "what-is-abstract",
              "connect-to-abstract"
            ]
          },
          {
            "group": "Build on Abstract",
            "pages": [
              "build-on-abstract/getting-started",
              {
                "group": "Smart Contracts",
                "pages": [
                  {
                    "group": "Hardhat",
                    "pages": [
                      "build-on-abstract/smart-contracts/hardhat/get-started",
                      "build-on-abstract/smart-contracts/hardhat/installation",
                      "build-on-abstract/smart-contracts/hardhat/compiling-contracts",
                      "build-on-abstract/smart-contracts/hardhat/testing-contracts",
                      "build-on-abstract/smart-contracts/hardhat/deploying-contracts",
                      "build-on-abstract/smart-contracts/hardhat/verifying-contracts"
                    ]
                  },
                  {
                    "group": "Foundry",
                    "pages": [
                      "build-on-abstract/smart-contracts/foundry/get-started",
                      "build-on-abstract/smart-contracts/foundry/installation",
                      "build-on-abstract/smart-contracts/foundry/compiling-contracts",
                      "build-on-abstract/smart-contracts/foundry/testing-contracts",
                      "build-on-abstract/smart-contracts/foundry/deploying-contracts",
                      "build-on-abstract/smart-contracts/foundry/verifying-contracts"
                    ]
                  }
                ]
              },
              {
                "group": "Applications",
                "pages": [
                  "build-on-abstract/applications/ethers",
                  "build-on-abstract/applications/viem",
                  "build-on-abstract/applications/thirdweb"
                ]
              },
              "build-on-abstract/zksync-cli"
            ]
          },
          {
            "group": "How Abstract Works",
            "pages": [
              {
                "group": "Architecture",
                "pages": [
                  "how-abstract-works/architecture/layer-2s",
                  "how-abstract-works/architecture/transaction-lifecycle",
                  {
                    "group": "Components",
                    "pages": [
                      "how-abstract-works/architecture/components/sequencer",
                      "how-abstract-works/architecture/components/prover-and-verifier",
                      "how-abstract-works/architecture/components/l1-rollup-contracts"
                    ]
                  }
                ]
              },
              {
                "group": "System Contracts",
                "pages": [
                  "how-abstract-works/system-contracts/overview",
                  "how-abstract-works/system-contracts/using-system-contracts",
                  "how-abstract-works/system-contracts/bootloader",
                  "how-abstract-works/system-contracts/list-of-system-contracts"
                ]
              },
              {
                "group": "Native Account Abstraction",
                "pages": [
                  "how-abstract-works/native-account-abstraction/overview",
                  "how-abstract-works/native-account-abstraction/transaction-flow",
                  "how-abstract-works/native-account-abstraction/smart-contract-wallets",
                  "how-abstract-works/native-account-abstraction/paymasters",
                  "how-abstract-works/native-account-abstraction/handling-nonces",
                  "how-abstract-works/native-account-abstraction/signature-validation"
                ]
              },
              {
                "group": "EVM Differences",
                "pages": [
                  "how-abstract-works/evm-differences/overview",
                  "how-abstract-works/evm-differences/evm-interpreter",
                  "how-abstract-works/evm-differences/best-practices",
                  "how-abstract-works/evm-differences/contract-deployment",
                  "how-abstract-works/evm-differences/evm-opcodes",
                  "how-abstract-works/evm-differences/precompiles",
                  "how-abstract-works/evm-differences/gas-fees",
                  "how-abstract-works/evm-differences/nonces",
                  "how-abstract-works/evm-differences/libraries"
                ]
              }
            ]
          },
          {
            "group": "Tooling",
            "pages": [
              "tooling/block-explorers",
              "tooling/bridges",
              "tooling/faucets",
              "tooling/deployed-contracts"
            ]
          },
          {
            "group": "Infrastructure",
            "pages": [
              {
                "group": "Nodes",
                "pages": [
                  "infrastructure/nodes/introduction",
                  "infrastructure/nodes/components",
                  "infrastructure/nodes/running-a-node"
                ]
              }
            ]
          }
        ]
      },
      {
        "tab": "Abstract Global Wallet",
        "groups": [
          {
            "group": "Abstract Global Wallet",
            "pages": [
              "abstract-global-wallet/overview",
              "abstract-global-wallet/getting-started",
              "abstract-global-wallet/architecture",
              "abstract-global-wallet/frequently-asked-questions"
            ]
          },
          {
            "group": "Library Integrations",
            "pages": [
              "abstract-global-wallet/agw-react/native-integration",
              "abstract-global-wallet/agw-react/integrating-with-connectkit",
              "abstract-global-wallet/agw-react/integrating-with-dynamic",
              "abstract-global-wallet/agw-react/integrating-with-privy",
              "abstract-global-wallet/agw-react/integrating-with-rainbowkit",
              "abstract-global-wallet/agw-react/integrating-with-reown",
              "abstract-global-wallet/agw-react/integrating-with-thirdweb"
            ]
          },
          {
            "group": "Abstract Client",
            "pages": [
              "abstract-global-wallet/agw-react/AbstractWalletProvider",
              "abstract-global-wallet/agw-react/hooks/useLoginWithAbstract",
              "abstract-global-wallet/agw-react/hooks/useAbstractClient",
              "abstract-global-wallet/agw-react/hooks/useGlobalWalletSignerAccount",
              "abstract-global-wallet/agw-react/hooks/useGlobalWalletSignerClient"
            ]
          },
          {
            "group": "Wallet Actions",
            "pages": [
              "abstract-global-wallet/agw-client/actions/deployContract",
              "abstract-global-wallet/agw-client/actions/signTransaction",
              "abstract-global-wallet/agw-client/actions/sendTransaction",
              "abstract-global-wallet/agw-client/actions/sendCalls",
              "abstract-global-wallet/agw-client/actions/signMessage",
              "abstract-global-wallet/agw-client/actions/writeContract",
              "abstract-global-wallet/agw-react/hooks/useWriteContractSponsored"
            ]
          },
          {
            "group": "Session Keys",
            "pages": [
              "abstract-global-wallet/session-keys/overview",
              "abstract-global-wallet/session-keys/going-to-production",
              "abstract-global-wallet/agw-client/session-keys/createSession",
              "abstract-global-wallet/agw-react/hooks/useCreateSession",
              "abstract-global-wallet/agw-client/session-keys/createSessionClient",
              "abstract-global-wallet/agw-client/session-keys/toSessionClient",
              "abstract-global-wallet/agw-client/session-keys/getSessionHash",
              "abstract-global-wallet/agw-client/session-keys/getSessionStatus",
              "abstract-global-wallet/agw-client/session-keys/revokeSessions",
              "abstract-global-wallet/agw-react/hooks/useRevokeSessions"
            ]
          },
          {
            "group": "FIAT On-ramp",
            "pages": [
              "abstract-global-wallet/fiat-on-ramp/using-crossmint"
            ]
          },
          {
            "group": "Utils",
            "pages": [
              "abstract-global-wallet/agw-client/getSmartAccountAddressFromInitialSigner",
              "abstract-global-wallet/agw-client/transformEIP1193Provider"
            ]
          }
        ]
      },
      {
        "tab": "Ecosystem",
        "groups": [
          {
            "group": "Ecosystem",
            "pages": [
              "ecosystem/automation",
              "ecosystem/bridges",
              "ecosystem/indexers",
              "ecosystem/interoperability",
              "ecosystem/multi-sig-wallets",
              "ecosystem/oracles",
              "ecosystem/paymasters",
              "ecosystem/relayers",
              "ecosystem/rpc-providers",
              "ecosystem/token-distribution"
            ]
          }
        ]
      },
      {
        "tab": "Cookbook",
        "groups": [
          {
            "group": "Cookbook",
            "pages": [
              "cookbook/random-number-generation"
            ]
          }
        ]
      },
      {
        "tab": "API Reference",
        "openapi": "/api-reference/openapi.json"
      }
    ]
  },
  "logo": {
    "light": "/logo/light.svg",
    "dark": "/logo/dark.svg"
  },
  "background": {
    "decoration": "grid"
  },
  "footer": {
    "socials": {
      "x": "https://x.com/abstractchain",
      "discord": "https://discord.com/invite/abstractchain",
      "github": "https://github.com/abstract-foundation"
    }
  },
  "contextual": {
    "options": [
      "copy",
      "chatgpt",
      "claude",
      "mcp",
      "cursor"
    ]
  },
  "redirects": [
    {
      "source": "/how-abstract-works/abstract-global-wallet/overview",
      "destination": "/abstract-global-wallet/overview"
    },
    {
      "source": "/how-abstract-works/abstract-global-wallet/architecture",
      "destination": "/abstract-global-wallet/architecture"
    },
    {
      "source": "/ecosystem/block-explorers",
      "destination": "/tooling/block-explorers"
    },
    {
      "source": "/ecosystem/faucets",
      "destination": "/tooling/faucets"
    },
    {
      "source": "/abstract-global-wallet/agw-client/session-keys/overview",
      "destination": "/abstract-global-wallet/session-keys/overview"
    },
    {
      "source": "/build-on-abstract/smart-contracts/hardhat",
      "destination": "/build-on-abstract/smart-contracts/hardhat/get-started"
    },
    {
      "source": "build-on-abstract/smart-contracts/foundry",
      "destination": "/build-on-abstract/smart-contracts/foundry/get-started"
    },
    {
      "source": "/abstract-global-wallet/agw-react/integrating-with-walletconnect",
      "destination": "/abstract-global-wallet/agw-react/integrating-with-reown"
    },
    {
      "source": "/abstract-global-wallet/agw-client/actions/sendTransactionBatch",
      "destination": "/abstract-global-wallet/agw-client/actions/sendCalls"
    }
  ]
}